version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    platform: linux/arm64
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    platform: linux/arm64
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    networks:
      - kafka-net
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT_HOST://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:9092,PLAINTEXT_INTERNAL://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1



  #  PLAINTEXT - host
  #  PLAINTEXT_INTERNAL - internal
  #   KAFKA CONNECT

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.5.0
    platform: linux/arm64
    hostname: kafka-connect
    container_name: kafka-connect
    restart: unless-stopped
    networks:
      - kafka-net
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: PLAINTEXT_INTERNAL://kafka:9093
      CONNECT_REST_PORT: 8083
      CONNECT_REST_HOST_NAME: kafka-connect
      CONNECT_GROUP_ID: kafka-connect-group-id
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: /data/connectors
    volumes:
      - /Users/vansh/data1/kafka-connect-data/connectors:/data/connectors/
      - /Users/vansh/data1/kafka-connect-data/inputs:/data/inputs/
      - /Users/vansh/data1/kafka-connect-data/errors:/data/errors/
      - /Users/vansh/data1/kafka-connect-data/processed:/data/processed/

    depends_on:
      - kafka


  #  POSTGRES
  postgres:
    image: postgres:16
    platform: linux/arm64/v8
    hostname: postgres
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - kafka-net

  # kakfa-schema-registry

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    platform: linux/arm64
    hostname: schema-registry
    container_name: schema-registry
    restart: unless-stopped
    networks:
      - kafka-net
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: WARN
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT_INTERNAL://kafka:9093
      KAFKASTORE_SECURITY_PROTOCOL: PLAINTEXT

    depends_on:
      - kafka

  sftp:
    image: atmoz/sftp:alpine
    platform: linux/amd64
    hostname: sftp-server
    container_name: sftp-server
    restart: unless-stopped
    ports:
      - "2222:22"
    command: sftpuser:sftppassword:::sink-output
    volumes:
      - ./sftp/upload:/data/spooldir/input
      - ./sftp/sink-output:/home/sftpuser/sink-output
    networks:
      - kafka-net

volumes:
  pgdata:


# This is use for only Single Compose file. I am not sharing my network
networks:
  kafka-net:
    driver: bridge

    #networks:  -> Multiple Compose files needing shared network
    #  kafka-net:
    #    external: tru
